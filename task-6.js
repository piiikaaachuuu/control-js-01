// –ü—Ä–∏ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—ñ —Å—Ç–æ—Ä—ñ–Ω–∫–∏ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–µ–≤—ñ –ø—Ä–æ–ø–æ–Ω—É—î—Ç—å—Å—è –≤ prompt –≤–≤–µ—Å—Ç–∏ —á–∏—Å–ª–æ. –í–≤–µ–¥–µ–Ω–Ω—è –∑–±–µ—Ä—ñ–≥–∞—î—Ç—å—Å—è –≤ –∑–º—ñ–Ω–Ω—É input —ñ –¥–æ–¥–∞—î—Ç—å—Å—è –≤ –º–∞—Å–∏–≤ —á–∏—Å–µ–ª numbers.
// –û–ø–µ—Ä–∞—Ü—ñ—è –≤–≤–µ–¥–µ–Ω–Ω—è —á–∏—Å–ª–∞ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–µ–º —ñ –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è –≤ –º–∞—Å–∏–≤ —Ç—Ä–∏–≤–∞—î –¥–æ —Ç–∏—Ö –ø–æ—Ä, –ø—ñ—Ä, –ø–æ–∫–∏ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á –Ω–µ –Ω–∞—Ç–∏—Å–Ω–µ Cancel –≤ prompt.
// –ü—ñ—Å–ª—è —Ç–æ–≥–æ —è–∫ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á –ø—Ä–∏–ø–∏–Ω–∏–≤ –≤–≤–µ–¥–µ–Ω–Ω—è –Ω–∞—Ç–∏—Å–Ω—É–≤—à–∏ Cancel, —è–∫—â–æ –º–∞—Å–∏–≤ –Ω–µ –ø–æ—Ä–æ–∂–Ω—ñ–π, –Ω–µ–æ–±—Ö—ñ–¥–Ω–æ –ø–æ—Ä–∞—Ö—É–≤–∞—Ç–∏ —Å—É–º—É –≤—Å—ñ—Ö –µ–ª–µ–º–µ–Ω—Ç—ñ–≤ –º–∞—Å–∏–≤—É —ñ –∑–∞–ø–∏—Å–∞—Ç–∏ —ó—ó –≤ –∑–º—ñ–Ω–Ω—É total. –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–π —Ü–∏–∫–ª for –∞–±–æ for...of. –ü—ñ—Å–ª—è —á–æ–≥–æ –≤ –∫–æ–Ω—Å–æ–ª—å –≤–∏–≤–µ–¥–∏ —Ä—è–¥–æ–∫ '–ó–∞–≥–∞–ª—å–Ω–∞ —Å—É–º–∞ —á–∏—Å–µ–ª –¥–æ—Ä—ñ–≤–Ω—é—î [—Å—É–º–∞]'.
// üîî –†–æ–±–∏—Ç–∏ –ø–µ—Ä–µ–≤—ñ—Ä–∫—É —Ç–æ–≥–æ, —â–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á –≤–≤—ñ–≤ —Å–∞–º–µ —á–∏—Å–ª–æ, –∞ –Ω–µ –¥–æ–≤—ñ–ª—å–Ω–∏–π –Ω–∞–±—ñ—Ä —Å–∏–º–≤–æ–ª—ñ–≤, –Ω–µ –æ–±–æ–≤'—è–∑–∫–æ–≤–æ. –Ø–∫—â–æ —Ö–æ—á–µ—à, –≤ —Ä–∞–∑—ñ –Ω–µ–∫–æ—Ä–µ–∫—Ç–Ω–æ–≥–æ –≤–≤–µ–¥–µ–Ω–Ω—è, –ø–æ–∫–∞–∑—É–π alert –∑ —Ç–µ–∫—Å—Ç–æ–º '–ë—É–ª–æ –≤–≤–µ–¥–µ–Ω–æ –Ω–µ —á–∏—Å–ª–æ, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —â–µ —Ä–∞–∑', –ø—Ä–∏ —Ü—å–æ–º—É —Ä–µ–∑—É–ª—å—Ç–∞—Ç prompt –∑–∞–ø–∏—Å—É–≤–∞—Ç–∏ –≤ –º–∞—Å–∏–≤ —á–∏—Å–µ–ª –Ω–µ –ø–æ—Ç—Ä—ñ–±–Ω–æ, –ø—ñ—Å–ª—è —á–æ–≥–æ –∑–Ω–æ–≤—É –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–µ–≤—ñ –ø—Ä–æ–ø–æ–Ω—É—î—Ç—å—Å—è –≤–≤–µ—Å—Ç–∏ —á–∏—Å–ª–æ –≤ prompt.

// !–°–ü–û–°–Ü–ë ‚Ññ1 (–±–µ–∑ –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ —á–∏ –≤–≤—ñ–≤ —Å–∞–º–µ —á–∏—Å–ª–æ —Ç–∞ –∑–∞ –¥–æ–ø–æ–º–æ–≥–æ—é do..while)
// let input;
// const numbers = [];
// let total = 0;

// do {
//   input = prompt("–í–≤–µ–¥—ñ—Ç—å —á–∏—Å–ª–æ:");
//   numbers.push(Number(input));
// } while (input !== null);

// if (numbers.length > 0) {
//   for (const number of numbers) {
//     total += number;
//   }
// }

// alert(`–ó–∞–≥–∞–ª—å–Ω–∞ —Å—É–º–∞ —á–∏—Å–µ–ª –¥–æ—Ä—ñ–≤–Ω—é—î: ${total}`);

// !–°–ü–û–°–Ü–ë ‚Ññ2 (–∑ –ø–µ—Ä–µ–≤—ñ—Ä–∫–æ—é —Ç–∞ –∑–∞ –¥–æ–ø–æ–º–æ–≥–æ—é while —Ç–∞ if..else)
let input;
const numbers = [];
let total = 0;

while (true) {
  input = prompt("–í–≤–µ–¥—ñ—Ç—å —á–∏—Å–ª–æ");
  if (input != null && input != "") {
    if (isNaN(input)) {
      alert("–í–∏ –≤–≤–µ–ª–∏ –Ω–µ —á–∏—Å–ª–æ, –ø–æ–≤—Ç–æ—Ä—ñ—Ç—å —â–µ —Ä–∞–∑!");
    } else {
      numbers.push(Number(input));
    }
  } else break;
}
if (numbers.length > 0) {
  for (let number of numbers) {
    total += number;
  }
  alert("–ó–∞–≥–∞–ª—å–Ω–∞ —Å—É–º–∞ —á–∏—Å–µ–ª –¥–æ—Ä—ñ–≤–Ω—é—î: " + total);
} else {
  console.log("–ú–∞—Å–∏–≤ —á–∏—Å–µ–ª –ø–æ—Ä–æ–∂–Ω—ñ–π!");
}
console.log(numbers);

// !–°–ü–û–°–Ü–ë ‚Ññ3 (–±–µ–∑ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è –º–∞—Å–∏–≤–∞)
// let input = prompt("–í–≤–µ–¥—ñ—Ç—å –ø–µ—Ä—à–µ —á–∏—Å–ª–æ");
// let total = 0;

// while (input != null) {
//   total += + input;
//   input = prompt("–í–≤–µ–¥—ñ—Ç—å —â–µ —á–∏—Å–ª–æ");
// }

// alert("–ó–∞–≥–∞–ª—å–Ω–∞ —Å—É–º–∞ —á–∏—Å–µ–ª –¥–æ—Ä—ñ–≤–Ω—é—î: " + total);
